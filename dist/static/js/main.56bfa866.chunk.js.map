{"version":3,"sources":["components/layouts/SignedInLinks.js","store/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/configFb.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","isEmpty","layouts_SignedOutLinks","layouts_SignedInLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this$props","Redirect","projects_ProjectList","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","email","password","handleChange","e","setState","defineProperty","target","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","uid","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"+RAuBeA,cAAQ,KALI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,ECJV,SAACA,EAAUE,EAAXC,IACYC,EAD6BD,EAAlBC,eAEnBC,OAAOJ,UAAUK,KAAK,WAC7BN,EAAS,CAAEO,KAAM,2BDIRR,CAlBO,SAACS,GAErB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAC3BJ,EAAMQ,QAAQC,cEARC,EATQ,WAEnB,OACET,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCoBKf,cAPS,SAACoB,GAEvB,OADAC,QAAQC,IAAIF,GACL,CACLd,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAGbjB,CAtBA,SAACS,GAAU,IAEhBH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACdI,QAAQC,IAAI,eAAehB,GAC3B,IAAMkB,EAASlB,EAAKmB,QAA+Cf,EAAAC,EAAAC,cAACc,EAAD,MAArChB,EAAAC,EAAAC,cAACe,EAAD,CAAeV,QAASA,IACtD,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAG,IAAIF,UAAU,cAAvB,mBACCW,uBCZM,SAASK,EAAcpB,GAAO,IACnCqB,EAAkBrB,EAAlBqB,cACR,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACXiB,GAAiBA,EAAcC,IAAI,SAAAC,GAClC,OAAOtB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKD,EAAKE,IACjBxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAamB,EAAKG,KAAlC,KACAzB,EAAAC,EAAAC,cAAA,YAAOoB,EAAKI,SACZ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACZwB,IAAOL,EAAKM,KAAKC,UAAUC,kBCZhD,IAgBeC,EAhBQ,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACxB,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACb8B,EAAQC,OAEXlC,EAAAC,EAAAC,cAAA,sBAAc+B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,UACUwB,IAAOM,EAAQI,SAASR,UAAUS,eCKrCC,EAbK,SAAAP,GAAkB,IAAfQ,EAAeR,EAAfQ,SACrB,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZqC,GAAYA,EAASnB,IAAI,SAAAY,GACxB,OACEjC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAI,YAAc4B,EAAQT,GAAID,IAAKU,EAAQT,IAC/CxB,EAAAC,EAAAC,cAACuC,EAAD,CAAgBR,QAASA,kCCHxBS,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAnB,IAAA,SAAA8B,MAAA,WACW,IAAAC,EAEmCR,KAAK/C,MAAvCyC,EAFDc,EAECd,SAAU5C,EAFX0D,EAEW1D,KAAMwB,EAFjBkC,EAEiBlC,cACxB,OAAIxB,EAAKmB,QAAgBf,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUlD,GAAG,YAEpCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACsD,EAAD,CAAahB,SAAUA,KAGzBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACiB,EAAD,CAAeC,cAAeA,WAb1CsB,EAAA,CAA+Be,aA6BhBC,cACbpE,YAVsB,SAACoB,GAEvB,MAAO,CACL8B,SAAU9B,EAAMiD,UAAUC,QAAQpB,SAClC5C,KAAMc,EAAMG,SAASjB,KACrBwB,cAAeV,EAAMiD,UAAUC,QAAQxC,iBAMzCyC,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAQ,CAAC,WAAW,SAC9C,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAQ,CAAC,OAAO,WAJ9CL,CAMbhB,GCMagB,cACbpE,YAXsB,SAACoB,EAAOuD,GAC9B,IAAMzC,EAAKyC,EAASC,MAAMC,OAAO3C,GAC3BgB,EAAW9B,EAAMiD,UAAUS,KAAK5B,SAEtC,MAAO,CACLP,QAFcO,EAAWA,EAAShB,GAAM,KAGxC5B,KAAMc,EAAMG,SAASjB,QAMvBiE,2BAAiB,CACf,CAAEC,WAAY,cAHHJ,CA1CQ,SAAC3D,GAAU,IAGxBkC,EAAiBlC,EAAjBkC,QACR,OADyBlC,EAATH,KACPmB,QAAgBf,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUlD,GAAG,YAElC4B,EAEAjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACb8B,EAAQC,OAEXlC,EAAAC,EAAAC,cAAA,SAAI+B,EAAQP,UAEd1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,wBAAgB+B,EAAQE,gBAAxB,IAA0CF,EAAQG,eAAlD,KACApC,EAAAC,EAAAC,cAAA,qBAAayB,IAAOM,EAAQI,SAASR,UAAUS,eAOrDtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,0CC5BKmE,EAAb,SAAA1B,GAAA,SAAA0B,IAAA,IAAAC,EAAAC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,GAAA,QAAAG,EAAAtB,UAAAuB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1B,UAAA0B,GAAA,OAAAL,EAAA3B,OAAAG,EAAA,EAAAH,CAAAE,MAAAwB,EAAA1B,OAAAI,EAAA,EAAAJ,CAAAyB,IAAAQ,KAAA5B,MAAAqB,EAAA,CAAAxB,MAAAgC,OAAAJ,MACEhE,MAAQ,CACNqE,MAAO,GACPC,SAAU,IAHdT,EAKEU,aAAe,SAACC,GACdX,EAAKY,SAALvC,OAAAwC,EAAA,EAAAxC,CAAA,GACGsC,EAAEG,OAAO7D,GAAK0D,EAAEG,OAAOhC,SAP9BkB,EAUEe,aAAe,SAACJ,GACdA,EAAEK,iBAEFhB,EAAKxE,MAAMyF,OAAOjB,EAAK7D,QAb3B6D,EAAA,OAAA3B,OAAAO,EAAA,EAAAP,CAAAyB,EAAA1B,GAAAC,OAAAQ,EAAA,EAAAR,CAAAyB,EAAA,EAAA9C,IAAA,SAAA8B,MAAA,WAeW,IAAAC,EACqBR,KAAK/C,MAAzB0F,EADDnC,EACCmC,UACR,OAFOnC,EACY1D,KACTmB,QAERf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMwF,SAAU5C,KAAKwC,aAAcnF,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ0B,GAAG,QAAQoE,SAAU9C,KAAKmC,gBAGhDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,YAAf,YACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW0B,GAAG,WAAWoE,SAAU9C,KAAKmC,gBAGtDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZsF,EAAYzF,EAAAC,EAAAC,cAAA,SAAIuF,GAAiB,SAnBlBzF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUlD,GAAG,UAjB3CgE,EAAA,CAA4BZ,aAyDbnE,cAZS,SAACoB,GACvB,MAAO,CACL+E,UAAW/E,EAAMd,KAAK6F,UACtB7F,KAAMc,EAAMG,SAASjB,OAGE,SAACL,GAC1B,MAAO,CACLiG,OAAQ,SAACK,GAAD,OAAWtG,GRzDAuG,EQyDgBD,ERxD9B,SAACtG,EAAUE,EAAXuC,IACYrC,EAD6BqC,EAAlBrC,eAGnBC,OAAOmG,2BACdD,EAAYf,MACZe,EAAYd,UACZnF,KAAK,WACLN,EAAS,CAAEO,KAAM,oBAChBkG,MAAM,SAACC,GACR1G,EAAS,CAAEO,KAAM,cAAemG,aAVhB,IAACH,KQ6DRxG,CAA6C+E,GCzDtD6B,6MACJxF,MAAQ,CACNqE,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,MAEZnB,aAAe,SAACC,GACdX,EAAKY,SAALvC,OAAAwC,EAAA,EAAAxC,CAAA,GACGsC,EAAEG,OAAO7D,GAAK0D,EAAEG,OAAOhC,WAG5BiC,aAAe,SAACJ,GACdA,EAAEK,iBACFhB,EAAKxE,MAAMsG,OAAO9B,EAAK7D,gFAEhB,IAAA4C,EACqBR,KAAK/C,MAAzBH,EADD0D,EACC1D,KAAM6F,EADPnC,EACOmC,UACd,OAAI7F,EAAK0G,IAAYtG,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUlD,GAAG,MAEhCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQuF,SAAU5C,KAAKwC,cACrCtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ0B,GAAG,QAAQoE,SAAU9C,KAAKmC,gBAEhDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,YAAf,YACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW0B,GAAG,WAAWoE,SAAU9C,KAAKmC,gBAEtDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,aAAf,cACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,YAAYoE,SAAU9C,KAAKmC,gBAEnDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,YAAf,aACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,WAAWoE,SAAU9C,KAAKmC,gBAElDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXsF,EAAYzF,EAAAC,EAAAC,cAAA,SAAIuF,GAAiB,gBA1C5BhC,aAgENnE,cAbS,SAACoB,GACvB,MAAO,CACLd,KAAMc,EAAMG,SAASjB,KACrB6F,UAAW/E,EAAMd,KAAK6F,YAIC,SAAClG,GAC1B,MAAO,CACL8G,OAAQ,SAACR,GAAD,OAAWtG,GTzCAgH,ESyCgBV,ETxC9B,SAACtG,EAAUE,EAAX+G,GAAuD,IAAhC7G,EAAgC6G,EAAhC7G,YAAa8G,EAAmBD,EAAnBC,aACnC5F,EAAWlB,IACXgE,EAAY8C,IAClB5F,EAASjB,OAAO8G,+BACdH,EAAQxB,MACRwB,EAAQvB,UACRnF,KAAK,SAAA8G,GAEL,OAAOhD,EAAUG,WAAW,SAAS8C,IAAID,EAAKlF,KAAK6E,KAAKO,IAAI,CAE1DV,UAAWI,EAAQJ,UACnBC,SAAUG,EAAQH,SAClB5F,SAAU+F,EAAQJ,UAAU,GAAKI,EAAQH,SAAS,OAEnDvG,KAAK,WACNN,EAAS,CAAEO,KAAM,qBAChBkG,MAAM,SAACC,GACR1G,EAAS,CAAEO,KAAM,eAAgBmG,aAlBjB,IAACM,KS6CRjH,CAA6C4G,WC/D/CY,EAAb,SAAAnE,GAAA,SAAAmE,IAAA,IAAAxC,EAAAC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,GAAA,QAAAtC,EAAAtB,UAAAuB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA1B,UAAA0B,GAAA,OAAAL,EAAA3B,OAAAG,EAAA,EAAAH,CAAAE,MAAAwB,EAAA1B,OAAAI,EAAA,EAAAJ,CAAAkE,IAAAjC,KAAA5B,MAAAqB,EAAA,CAAAxB,MAAAgC,OAAAJ,MACEhE,MAAQ,CACNwB,MAAO,GACPR,QAAS,IAHb6C,EAKEU,aAAe,SAACC,GACdX,EAAKY,SAALvC,OAAAwC,EAAA,EAAAxC,CAAA,GACGsC,EAAEG,OAAO7D,GAAK0D,EAAEG,OAAOhC,SAP9BkB,EAUEe,aAAe,SAACJ,GACdA,EAAEK,iBACF5E,QAAQC,IAAI2D,EAAK7D,OAEjB6D,EAAKxE,MAAMgH,cAAcxC,EAAK7D,OAC9B6D,EAAKxE,MAAMiH,QAAQC,KAAK,MAf5B1C,EAAA,OAAA3B,OAAAO,EAAA,EAAAP,CAAAkE,EAAAnE,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkE,EAAA,EAAAvF,IAAA,SAAA8B,MAAA,WAmBI,OADaP,KAAK/C,MAAXH,KACEmB,QAAgBf,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUlD,GAAG,YAEpCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMwF,SAAU5C,KAAKwC,aAAcnF,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,wBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,QAAQoE,SAAU9C,KAAKmC,gBAG/CjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,WAAf,mBACA3F,EAAAC,EAAAC,cAAA,YAAUC,UAAU,uBAAuBqB,GAAG,UAAUoE,SAAU9C,KAAKmC,gBAGzEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,iBApCZ2G,EAAA,CAAmCrD,aA4DpBnE,cAfO,SAACoB,GACrB,MAAM,CACJd,KAAMc,EAAMG,SAASjB,OAIE,SAACL,GAC1B,MAAO,CAILwH,cAAe,SAAC9E,GAAD,OAAa1C,EC5DH,SAAC0C,GAC5B,OAAO,SAAC1C,EAAUE,EAAXuC,GAA0C,IAGzC2B,GAAY8C,EAH6BzE,EAAnByE,gBAItBlG,EAAUd,IAAWoB,SAASN,QAC9B2G,EAAWzH,IAAWoB,SAASjB,KAAK0G,IAI1C3C,EAAUG,WAAW,YAAYqD,IAAjCvE,OAAAwE,EAAA,EAAAxE,CAAA,GACKX,EADL,CAEEE,gBAAiB5B,EAAQ4F,UACzB/D,eAAgB7B,EAAQ6F,SACxBc,SAAUA,EACV7E,SAAU,IAAIgF,QACbxH,KAAK,WAENN,EAAS,CAAEO,KAAM,yBAA0BmC,cAC1C+D,MAAM,SAACC,GAER1G,EAAS,CAAEO,KAAM,uBAAwBmG,WDuCNc,CAAc9E,OAIxC3C,CAA6CwH,GEpC7CQ,mLAlBP,OACItH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACIvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnF,IACjC1C,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWC,IACtC9H,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWxD,IACjCrE,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW3B,IACjClG,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,cAXrCrD,aCEZsE,UAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjE,MACvB,4DAIC,SAASkE,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,GAAwBP,OAAOC,SAASO,MACpDC,SAAWT,OAAOC,SAASQ,OAIvC,OAGFT,OAAOU,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAA9D,OAAM0D,GAAN,sBAEPT,IAgEV,SAAiCa,EAAOP,GAEtCQ,MAAMD,GACH/I,KAAK,SAAAiJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5Cb,UAAUc,cAAcC,MAAMxJ,KAAK,SAAAyJ,GACjCA,EAAaC,aAAa1J,KAAK,WAC7BoI,OAAOC,SAASsB,aAKpBC,EAAgBb,EAAOP,KAG1BrC,MAAM,WACLrF,QAAQC,IACN,mEArFA8I,CAAwBd,EAAOP,GAI/BC,UAAUc,cAAcC,MAAMxJ,KAAK,WACjCc,QAAQC,IACN,+GAMJ6I,EAAgBb,EAAOP,MAM/B,SAASoB,EAAgBb,EAAOP,GAC9BC,UAAUc,cACPhB,SAASQ,GACT/I,KAAK,SAAAyJ,GACJA,EAAaK,cAAgB,WAC3B,IAAMC,EAAmBN,EAAaO,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlJ,QACf4H,UAAUc,cAAcW,YAI1BpJ,QAAQC,IACN,gHAKEyH,GAAUA,EAAO2B,UACnB3B,EAAO2B,SAASV,KAMlB3I,QAAQC,IAAI,sCAGRyH,GAAUA,EAAO4B,WACnB5B,EAAO4B,UAAUX,UAO5BtD,MAAM,SAAAkE,GACLvJ,QAAQuJ,MAAM,4CAA6CA,KChGjE,IAAMC,EAAY,CAChB1E,UAAW,MAqCE2E,EAlCK,WAA+B,IAA9B1J,EAA8BwC,UAAAuB,OAAA,QAAA4F,IAAAnH,UAAA,GAAAA,UAAA,GAAtBiH,EAAWG,EAAWpH,UAAAuB,OAAA,EAAAvB,UAAA,QAAAmH,EACjD,OAAQC,EAAOxK,MACb,IAAK,cAEH,OADAa,QAAQC,IAAI,eACLgC,OAAAwE,EAAA,EAAAxE,CAAA,GACFlC,EADL,CAEE+E,UAAW,iBAEf,IAAK,gBAEH,OADA9E,QAAQC,IAAI,iBACLgC,OAAAwE,EAAA,EAAAxE,CAAA,GACFlC,EADL,CAEE+E,UAAW,OAEf,IAAK,kBAEH,OADA9E,QAAQC,IAAI,mBACLF,EACT,IAAK,iBAEH,OADAC,QAAQC,IAAI,kBACLgC,OAAAwE,EAAA,EAAAxE,CAAA,GACFlC,EADL,CAEE+E,UAAW,OAEb,IAAK,eAEL,OADA9E,QAAQC,IAAI,gBACLgC,OAAAwE,EAAA,EAAAxE,CAAA,GACFlC,EADL,CAEE+E,UAAW6E,EAAOrE,IAAIsE,UAE1B,QACE,OAAO7J,IClCPyJ,EAAY,GAeHK,EAbQ,WAA+B,IAA9B9J,EAA8BwC,UAAAuB,OAAA,QAAA4F,IAAAnH,UAAA,GAAAA,UAAA,GAAtBiH,EAAWG,EAAWpH,UAAAuB,OAAA,EAAAvB,UAAA,QAAAmH,EACpD,OAAQC,EAAOxK,MACb,IAAK,yBAEH,OADAa,QAAQC,IAAI,mBAAoB0J,EAAOrI,SAChCvB,EACT,IAAK,uBAEH,OADAC,QAAQC,IAAI,wBAAyB0J,EAAOrE,KACrCvF,EACT,QACE,OAAOA,YCME+J,EAXKC,YAAgB,CAClC9K,KAAMwK,EACNnI,QAASuI,EAKT7G,UAAWgH,mBACX9J,SAAU+J,6DCAV/J,IAASgK,cATI,CACXC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBAKrBtK,IAAS8C,YAAYyH,SAAS,IAEfvK,QAAf,ECHIwK,GAAQC,YAAYb,EACxB/G,YACE6H,YAAgBC,IAAMC,kBAAkB,CAAE9L,0BAAa8G,+BACvDiF,yBAAeC,GACfC,6BAAmBD,EAAU,CAAEE,wBAAwB,EAAMC,YAAa,QAASC,mBAAmB,MAG1GV,GAAMW,oBAAoBnM,KAAK,WAC7BoM,IAASC,OAAOlM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAUd,MAAOA,IAAOrL,EAAAC,EAAAC,cAACkM,EAAD,OAAoBC,SAASC,eAAe,SACpFlD","file":"static/js/main.56bfa866.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  // function () {}\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n        {props.profile.initials}\n      </NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","// export default function signIn(credentials) {\nexport const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n}\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then(resp => {\n      // create new user record in firestore\n      return firestore.collection('users').doc(resp.user.uid).set({\n        //storing following in document\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err });\n    });\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    // function () {}\n    return (\n      <ul className=\"right\">\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    )\n}\nexport default SignedOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  // function () {}\n  const { auth, profile } = props;\n  console.log('navbar props',auth);\n  const links = !auth.isEmpty ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n  return (\n    <nav className=\"navwrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">Game Catalogue!</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nexport default function Notifications(props) {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            {notifications && notifications.map(item => {\n              return <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\n\n// export default function ProjectSummary({ project }) {\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">\n          {project.title}\n        </span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">\n          Posted {moment(project.createAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n// export default function ProjectList({ projects }) {\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nexport class Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (auth.isEmpty) return <Redirect to='/signin' />\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          {/* 12 cols on small screen, 6 on medium */}\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n// use compose to join higher order components\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy:['createAt','desc'] },\n    { collection: 'notifications', limit: 3, orderBy:['time','desc'] }\n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  // console.log(props);\n  // const id = props.match.params.id;\n  const { project,auth } = props;\n  if (auth.isEmpty) return <Redirect to='/signin'/>\n  \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">\n              {project.title}\n            </span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName} </div >\n            <div>Posted {moment(project.createAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nexport class SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (!auth.isEmpty) return <Redirect to='/'/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-fie\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\n// connect - connects component to redux store\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport {Redirect} from 'react-router-dom'\n\nexport class CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    // now call mapDispatchToProps\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const {auth}=this.props;\n    if (auth.isEmpty) return <Redirect to='/signin'/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return{\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // pass in project stored on the state\n    // use dispatch to call action creator createProject\n    // createProject imported at top\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","// With Thunk you can return a function\n// export default function createProject(project) {\nexport const createProject = (project) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make asynch call to database\n    // pause dispatch until following is complete\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    //returns a promise. function fired  after then\n    // Add new document to project store\n    // based off the createProject component state\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createAt: new Date()\n    }).then(() => {\n      // once complete fire dispatcher to projectReducer\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS', project });\n    }).catch((err) => {\n      // once complete fire dispatcher to projectReducer\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    })\n  }\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./components/layouts/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n// CONTAINER COMPONENT\n// holds state / hooks state from internet and feeds to UI COMPONENT (like navbar)\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar />\n                    <Switch>\n                      <Route exact path='/' component={Dashboard}/>\n                      <Route path='/project/:id' component={ProjectDetails}/>\n                      <Route path='/signin' component={SignIn}/>\n                      <Route path='/signup' component={SignUp}/>\n                      <Route path='/create' component={CreateProject}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error')\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n      case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log(\"Created project \", action.project)\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log(\"create proejct error \", action.err);\n      return state;\n    default:\n      return state\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  // firestoreReducer automatically syncs \n  // firestore property on the state object\n  // to the database, depending on what component\n  // is active\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","  import firebase from 'firebase/app'\n  import 'firebase/firestore'\n  import 'firebase/auth'\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyBLI3eaz20fgUBMVTBCPVpVtePhHonMwtk\",\n    authDomain: \"wamballaproject.firebaseapp.com\",\n    databaseURL: \"https://wamballaproject.firebaseio.com\",\n    projectId: \"wamballaproject\",\n    storageBucket: \"wamballaproject.appspot.com\",\n    messagingSenderId: \"928435052012\"\n  };\n\n  firebase.initializeApp(config);\n  // firebase.firestore().settings({timestampsInSnapshots: true});\n  firebase.firestore().settings({});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/configFb'\n\n// thunk is middleware\n// add middleware and store enhancements here\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig), // redux binding for firebase\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) //redux binding for firestore\n  ));\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.register();\n  // registerServiceWorker();\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n"],"sourceRoot":""}